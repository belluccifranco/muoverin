<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"       
       xmlns:context="http://www.springframework.org/schema/context"       
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc" 
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd       
       http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
        
    <context:annotation-config/>    
    <context:component-scan base-package="com.muoverin.controller" />
    <context:component-scan base-package="com.muoverin.service" />
    <context:component-scan base-package="com.muoverin.repository" />
    <context:component-scan base-package="com.muoverin.exception" />
    
    <bean id="dataPopulator" class="com.muoverin.util.DataPopulator"/>
    
    <mvc:resources mapping="/resources/**" location="/resources/"/>
    
    <mvc:view-controller path="/" view-name="main"/>    
    <mvc:view-controller path="/signup" view-name="signup"/>
    
    <mvc:annotation-driven>
        <mvc:message-converters>
            <!-- Use the HibernateAware mapper instead of the default -->
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="com.muoverin.util.HibernateAwareObjectMapper" />
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
                    
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="/WEB-INF/view/"
          p:suffix=".jsp" />    
    
    
    <!-- INTERNATIONALIZATION -->    
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:messages" />
        <property name="defaultEncoding" value="UTF-8" />
    </bean>  
        
    
    <!-- SECURITY -->
    <security:http pattern="/player/**" security="none"/>
    <security:http pattern="/login" security="none"/>        
    <security:http pattern="/loginFailed" security="none"/>
    <security:http pattern="/logout" security="none"/>    
    <security:http pattern="/signup" security="none"/>
    <security:http pattern="/userAccounts" security="none"/>
    <security:http auto-config="true" entry-point-ref="authenticationEntryPoint">
        <security:form-login login-page="/login"
                             default-target-url="/"
                             authentication-failure-url="/loginFailed"/>
        <security:intercept-url pattern="/resources/images/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:intercept-url pattern="/resources/scripts/public/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:intercept-url pattern="/resources/styles/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:intercept-url pattern="/**" access="ROLE_CUSTOMER"/>
        <security:logout logout-success-url="/login" invalidate-session="true"/>
        <security:session-management>
            <security:concurrency-control max-sessions="1"/>
        </security:session-management>
    </security:http>    
    <bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="userDetailsService"/>
    </bean>
    <bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
        <property name="providers">
            <list>                
                <ref bean="daoAuthenticationProvider"/>
            </list>
        </property>
    </bean>    
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userDetailsService">            
            <security:password-encoder hash="md5"/>
        </security:authentication-provider>
    </security:authentication-manager>  
    
    <bean id="authenticationEntryPoint" class="com.muoverin.util.AjaxAwareAuthenticationEntryPoint">
        <constructor-arg name="loginUrl" value="/login"/>
    </bean>
    
    <!-- STORAGE -->
    <beans profile="H2">
        <jdbc:embedded-database id="dataSource" type="H2"></jdbc:embedded-database>
        
        <bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> 
            <property name="dataSource" ref="dataSource" /> 
            <property name="jpaVendorAdapter"> 
                <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" /> 
            </property> 
            <property name="packagesToScan" value="com.muoverin.model"/>
            <property name="jpaProperties"> 
                <props> 
                    <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop> 
                    <prop key="hibernate.max_fetch_depth">3</prop> 
                    <prop key="hibernate.jdbc.fetch_size">50</prop> 
                    <prop key="hibernate.jdbc.batch_size">10</prop> 
                    <prop key="hibernate.show_sql">false</prop> 
                    <prop key="hibernate.hbm2ddl.auto">create</prop>
                    <prop key="hibernate.format_sql">true</prop>
                </props> 
            </property> 
        </bean>        
        
        <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"> 
            <property name="entityManagerFactory" ref="emf"/>
        </bean> 
        <tx:annotation-driven />
    </beans>
    
    <beans profile="postgresql">
        <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
              p:driverClassName="org.postgresql.Driver"
              p:url="jdbc:postgresql://localhost/muoverin"
              p:username="user"
              p:password="user"/>
            
        <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
            <property name="dataSource" ref="dataSource" /> 
            <property name="jpaVendorAdapter">
                <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>                
            </property>            
            <property name="packagesToScan" value="com.muoverin.model"/>
            <property name="jpaProperties"> 
                <props>                
                    <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                    <prop key="hibernate.show_sql">false</prop> 
                    <prop key="hibernate.hbm2ddl.auto">create</prop>
                    <prop key="hibernate.format_sql">true</prop>                
                </props> 
            </property> 
        </bean>
                
        <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
            <property name="entityManagerFactory" ref="entityManagerFactory"/>
        </bean>
        <tx:annotation-driven />        
    </beans>          
    
    <beans profile="postgresqlHeroku">
        <bean class="java.net.URI" id="dbUrl">
            <constructor-arg value="#{systemEnvironment['DATABASE_URL']}"/>
        </bean>
        
        <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
              p:driverClassName="org.postgresql.Driver"
              p:url="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }"
              p:username="#{ @dbUrl.getUserInfo().split(':')[0] }"
              p:password="#{ @dbUrl.getUserInfo().split(':')[1] }"/>
        
        <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
            <property name="dataSource" ref="dataSource" /> 
            <property name="jpaVendorAdapter">
                <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>                
            </property>            
            <property name="packagesToScan" value="com.muoverin.model"/>
            <property name="jpaProperties"> 
                <props>                
                    <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                    <prop key="hibernate.show_sql">false</prop> 
                    <prop key="hibernate.hbm2ddl.auto">create</prop>
                    <prop key="hibernate.format_sql">true</prop>                
                </props> 
            </property> 
        </bean>
                
        <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
            <property name="entityManagerFactory" ref="entityManagerFactory"/>
        </bean>
        <tx:annotation-driven />        
    </beans>
</beans>